#!/usr/bin/env bash
set -eEuo pipefail

_on_error() {
  trap '' ERR
  line_path=$(caller)
  line=${line_path% *}
  path=${line_path#* }

  echo ""
  echo "ERR $path:$line $BASH_COMMAND exited with $1"
  _shutdown 1
}
trap '_on_error $?' ERR

_shutdown() {
  trap '' TERM INT
  echo "shutdown: $1"

  kill 0
  wait
  exit 0
}
trap '_shutdown 0' TERM INT

export KUBECONFIG=/tmp/usva/kubeconfig

subcommand=${1:-help}
handled=yes
case "$subcommand" in
  reset)
    limactl delete -f usva-mcp || true
    rm -rf /tmp/usva || true

    echo "clean"
  ;;
  start)
    mkdir -p /tmp/usva/bootstrap

    if [[ ! -f vendor/arm64/k0s ]]; then
      curl -Lf -o vendor/arm64/k0s https://github.com/k0sproject/k0s/releases/download/v1.28.3%2Bk0s.0/k0s-v1.28.3+k0s.0-arm64
    fi

    chmod +x vendor/arm64/k0s
    chmod +x bootstrap.sh

    cp vendor/arm64/k0s /tmp/usva/bootstrap
    cp bootstrap.sh /tmp/usva/bootstrap/bootstrap.sh

    limactl start --name usva-mcp - < components/mcp/lima.yml
    limactl shell usva-mcp -- sudo /tmp/usva/bootstrap/bootstrap.sh
  ;;
  k0smotron)
    exec kubectl apply -f https://docs.k0smotron.io/v0.7.0/install.yaml
  ;;
  kubectl)
    exec kubectl ${*:2}
  ;;
  help)
    echo "help"
  ;;
  *)
    handled=no
  ;;
esac

[[ "$handled" == "yes" ]] && exit 0

echo "unknown subcommand: $subcommand"
exit 1
